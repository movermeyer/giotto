#!/usr/bin/env python
"""
Makes a file for invoking a giotto project for a given controller

Usage:
    $ giotto_controller [--http] [--cmd]
"""

import sys
import stat
import os
from jinja2 import Template

cmd = "--cmd" in sys.argv
http_dev = "--http-dev" in sys.argv

template = """#!/usr/bin/env python

from giotto import GiottoProgram, GiottoAbstractProgram
from giotto.views import TEXT

def multiply(x, y):
    return {'x': x, 'y': y, 'product': int(x) * int(y)}

class BaseMultiply(GiottoAbstractProgram):
    name = "multiply"
    model = (multiply, )

class MultiplyHTTP(BaseMultiply):
    controller = 'http-get'
    {% raw %}view = TEXT(
        '<html><body>{{obj.x}} * {{obj.y}} == {{obj.product}}</body></html>',
        mimetype="text/html"
    ){% endraw %}

class MultiplyCMD(BaseMultiply):
    controller = 'cmd'
    {% raw %}view = TEXT("{{obj.x}} * {{obj.y}} == {{obj.product}}"){% endraw %}

################### generated code below

import sys
from giotto.core import itersubclasses
programs = list(itersubclasses(GiottoProgram))
controller = sys.argv[1]
"""

if http_dev:
    from giotto.controllers.http import http_execution_snippet
    template = template + http_execution_snippet

if cmd:
    from giotto.controllers.cmd import cmd_execution_snippet
    template = template + cmd_execution_snippet

if __name__ == '__main__':
    rendered = Template(template).render()
    f = open('giotto', 'w')
    f.write(rendered)
    f.close()
    st = os.stat('giotto')
    os.chmod('giotto', st.st_mode | stat.S_IEXEC)