#!/usr/bin/env python
"""
Makes a file for invoking a giotto project for a given controller

Usage:
    $ giotto_controller [--http] [--cmd] [--irc]
"""

import sys
import stat
import os
from jinja2 import Template

cmd = "--cmd" in sys.argv
http_dev = "--http-dev" in sys.argv
irc = '--irc' in sys.argv

template = '''#!/usr/bin/env python

from giotto import GiottoProgram
from giotto.views import GiottoTemplateView

class ColoredMultiplyView(GiottoTemplateView):

    def text_html(self, result):
        return """<!DOCTYPE html>
        <html>
            <body>
                {% raw %}<span style="color: blue">{{obj.x}} * {{obj.y}}</span> == 
                <span style="color: red">{{obj.product}}</span>{% endraw %}
            </body>
        </html>"""

    def text_cmd(self, result):
        from colorama import init, Fore
        init()
        {% raw %}return "{blue}{x} * {y}{reset} == {red}{product}{reset}".format(
            blue=Fore.BLUE,
            red=Fore.RED,
            reset=Fore.RESET,
            x=result['x'],
            y=result['y'],
            product=result['product'],
        ){% endraw %}

def multiply(x, y):
    return {'x': x, 'y': y, 'product': int(x) * int(y)}

class BaseMultiply(GiottoProgram):
    name = "multiply"
    model = [multiply]
    view = [ColoredMultiplyView]
    controllers = ('http-get', 'cmd')

################### generated code below

import sys
from giotto.core import itersubclasses
programs = list(itersubclasses(GiottoProgram))
controller = sys.argv[1]
'''

if http_dev:
    from giotto.controllers.http import http_execution_snippet
    template = template + http_execution_snippet

if irc:
    from giotto.controllers.irc import irc_execution_snippet
    template = template + irc_execution_snippet

if cmd:
    from giotto.controllers.cmd import cmd_execution_snippet
    template = template + cmd_execution_snippet

if __name__ == '__main__':
    rendered = Template(template).render()
    f = open('giotto', 'w')
    f.write(rendered)
    f.close()
    st = os.stat('giotto')
    os.chmod('giotto', st.st_mode | stat.S_IEXEC)